<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RocketLib</name>
    </assembly>
    <members>
        <member name="T:RocketLib.RocketLib">
            <summary>
            Library of useful function made for Broforce. And an OnScreen Logger.
            </summary>
        </member>
        <member name="T:RocketLib.RocketLib._HeroUnlockController">
            <summary>
            
            </summary>
        </member>
        <member name="F:RocketLib.RocketLib._HeroUnlockController.HeroTypeList">
            <summary>
            It's the HeroType  list of the Broforce bros.
            </summary>
        </member>
        <member name="F:RocketLib.RocketLib._HeroUnlockController.ExpendabrosHeroTypeList">
            <summary>
            It's the HeroType List of the Expendabros bros.
            </summary>
        </member>
        <member name="F:RocketLib.RocketLib._HeroUnlockController.HeroTypeFullList">
            <summary>
            It's the full HeroType list of the Broforce bros. Include Expendabros and Brond Fly.
            </summary>
        </member>
        <member name="F:RocketLib.RocketLib._HeroUnlockController.HeroUnlockIntervalsInt">
            <summary>
            The list of unlock intervals of the bros.
            </summary>
        </member>
        <member name="M:RocketLib.RocketLib._HeroUnlockController.GetHeroUnlockIntervals">
            <summary>
            Return the dictionnary of the Intervals for unlock bros.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RocketLib.RocketLib._HeroUnlockController.SetHeroUnlockIntervals(System.Collections.Generic.Dictionary{System.Int32,HeroType})">
            <summary>
            Set the Intervals for unlock bros.
            </summary>
            <param name="newHeroUnlockIntervals">The new intervall dictionary.</param>
        </member>
        <member name="M:RocketLib.RocketLib._HeroUnlockController.BuildHeroUnlockIntervalsDictionary(System.Collections.Generic.List{HeroType})">
            <summary>
            Create the HeroUnlockInterval dictionary.
            </summary>
            <param name="HeroList">The list of hero to use.</param>
            <returns></returns>
        </member>
        <member name="M:RocketLib.RocketLib._HeroUnlockController.BuildHeroUnlockIntervalsDictionary(System.Collections.Generic.List{HeroType},System.Collections.Generic.List{System.Int32})">
            <summary>
            Create the HeroUnlockIntervals dictionary.
            </summary>
            <param name="HeroList">The list of hero to use.</param>
            <param name="IntervalsInt">The list of custom intervals to use.</param>
            <returns>The HeroUnlockIntervals dictionnary</returns>
        </member>
        <member name="M:RocketLib.RocketLib._HeroUnlockController.ShowHeroUnlockIntervals">
            <summary>
            Show Current Unlock order
            </summary>
        </member>
        <member name="T:RocketLib.RocketLib.ScreenLogger">
            <summary>
            On screen logger.
            </summary>
        </member>
        <member name="F:RocketLib.RocketLib.ScreenLogger.ModId">
            <summary>
            The Id of your mod who will display on the log. Call this variable before calling the Log function. Example :
            <code>RocketLib.ScreenLogger.ModId = "ID";</code>
            </summary>
        </member>
        <member name="M:RocketLib.RocketLib.ScreenLogger.Clear">
            <summary>
            Clear the log on screen.
            </summary>
        </member>
        <member name="M:RocketLib.RocketLib.ScreenLogger.Log(System.Object)">
            <summary>
            Add log to the screen.
            </summary>
            <param name="str">Log Message</param>
        </member>
        <member name="M:RocketLib.RocketLib.ScreenLogger.Log(System.Object,RLogType)">
            <summary>
            Add log to the screen.
            </summary>
            <param name="str">Log Message</param>
            <param name="type"><code>RLogType</code></param>
        </member>
        <member name="F:RocketLib.RocketLib.GameDataPath">
            <summary>
            Give the '_Data' folder of the game. Be careful ! If the mod is not load, it will be empty !
            </summary>
        </member>
        <member name="T:RocketLib.RocketLib.IsThisModIs">
            <summary>This constructor check if a mod is Here or is Enabled.
            <example>
            Example of call :
            <code>
                RocketLib.IsThisModIs RocketLib_info = new RocketLib.IsThisModIs("RocketLib");
            </code>
            </example>
            </summary>
        </member>
        <member name="F:RocketLib.RocketLib.IsThisModIs.Here">
            <summary>
            Return if the mod is Here.
            </summary>
        </member>
        <member name="F:RocketLib.RocketLib.IsThisModIs.Enabled">
            <summary>
            Return is the mod is Enabled, if the mod does not exist it will return false.
            </summary>
        </member>
        <member name="M:RocketLib.RocketLib.IsThisModIs.#ctor(System.String)">
            <summary>This constructor check if a mod is Here or is Enabled.
            <example>
            Example of call :
            <code>
                RocketLib.IsThisModIs RocketLib_info = new RocketLib.IsThisModIs("RocketLib");
            </code>
            </example>
            </summary>
            <param name="ID">Id of the mod.</param>
        </member>
        <member name="T:RocketLib.RocketLib.GUI">
            <summary>
            This class contains my GUILayout.
            </summary>
        </member>
        <member name="M:RocketLib.RocketLib.GUI.ArrowList(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            A custom GUILayout. You make a choice with arrow.
            </summary>
            <param name="list">The given list where you can choose a value.</param>
            <param name="Nbr">The number who make the choice.</param>
            <returns>Int for the list</returns>
        </member>
        <member name="T:RLogType">
            <summary>
            Type of log for the log. They each have a "custom" color.
            </summary>
        </member>
        <member name="F:RLogType.Log">
            <summary>
            White
            </summary>
        </member>
        <member name="F:RLogType.Warning">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="F:RLogType.Error">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:RLogType.Exception">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:RLogType.Information">
            <summary>
            Blue 
            </summary>
        </member>
        <member name="T:RocketLibLoadMod.Main">
            <summary>
            Really, you don't need it. Anyway you will just have the function of the UnityModManager.
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Main.mod">
            <summary>
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Main.enabled">
            <summary>
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Main.settings">
            <summary>
            </summary>
        </member>
        <member name="T:RocketLibLoadMod.Settings">
            <summary>
            Really, you don't need it. Anyway you will just have the function of the UnityModManager.
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Settings.OnScreenLog">
            <summary>
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Settings.ShowScreenLogOption">
            <summary>
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Settings.ShowManagerLog">
            <summary>
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Settings.DebugMode">
            <summary>
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Settings.HaveItFirstLaunch">
            <summary>
            </summary>
        </member>
        <member name="F:RocketLibLoadMod.Settings.logTimer">
            <summary>
            </summary>
        </member>
        <member name="M:RocketLibLoadMod.Settings.Save(UnityModManagerNet.UnityModManager.ModEntry)">
            <summary>
            </summary>
            <param name="modEntry"></param>
        </member>
    </members>
</doc>
